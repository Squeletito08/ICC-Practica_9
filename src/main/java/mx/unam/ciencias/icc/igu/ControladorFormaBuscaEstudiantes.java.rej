--- src/main/java/mx/unam/ciencias/icc/igu/ControladorFormaBuscaEstudiantes.java
+++ src/main/java/mx/unam/ciencias/icc/igu/ControladorFormaBuscaEstudiantes.java
@@ -19,35 +19,78 @@ public class ControladorFormaBuscaEstudiantes
 
     /* Inicializa el estado de la forma. */
     @FXML private void initialize() {
-        // Aquí va su código.
+        entradaValor.setVerificador(e -> verificaValor(e));
+        entradaValor.textProperty().addListener((o, v, n) -> revisaValor(null));
     }
 
     /* Revisa el valor después de un cambio. */
-    @FXML private void revisaValor(ActionEvent evento) {
-        // Aquí va su código.
+    @FXML private void revisaValor (ActionEvent evento) {
+        Tooltip.install(entradaValor,getTooltip());
+        botonAceptar.setDisable(!entradaValor.esValida());
     }
 
     /* Manejador para cuando se activa el botón aceptar. */
     @FXML private void aceptar(ActionEvent evento) {
-        // Aquí va su código.
+        aceptado = true;
+        escenario.close(); 
     }
 
     /* Verifica el valor. */
-    private boolean verificaValor(String valor) {
-        // Aquí va su código.
+    private boolean verificaValor (String valor) {
+        switch (opcionesCampo.getValue()) {
+            case NOMBRE:
+                return verificaNombre(valor);
+            case CUENTA:
+                return verificaCuenta(valor);
+            case PROMEDIO: 
+                return verificaPromedio(valor);
+            case EDAD:
+                return verificaEdad(valor);
+            default:
+                return false ; // No puede ocurrir .
+        }
     }
 
     /* Obtiene la pista. */
-    private Tooltip getTooltip() {
-        // Aquí va su código.
+    private Tooltip getTooltip () {
+        String m = " ";
+        switch (opcionesCampo.getValue()) {
+            case NOMBRE:
+                m = "Buscar por nombre necesita al menos un carácter";
+                break;
+            case CUENTA:
+                m = "Buscar por cuenta necesita un número entre" +
+                "1000000 y 99999999";
+                break;
+            case PROMEDIO:
+                m = "Buscar por promedio necesita un número" +
+                "entre 0.0 y 10.0";
+                break;
+            case EDAD:
+                m = "Buscar por edad necesita un número entre 13 y 9";
+                break;
+            }
+
+        return new Tooltip(m);
     }
 
     /**
      * Regresa el valor ingresado.
      * @return el valor ingresado.
      */
-    public Object getValor() {
-        // Aquí va su código.
+    public Object getValor () {
+        switch (opcionesCampo.getValue()) {
+        case NOMBRE:
+            return entradaValor.getText();
+        case CUENTA:
+            return Integer.parseInt(entradaValor.getText());
+        case PROMEDIO:
+            return Double.parseDouble(entradaValor.getText());
+        case EDAD:
+            return Integer.parseInt(entradaValor.getText());
+        default:
+            return entradaValor.getText(); // No puede ocurrir .
+        }
     }
 
     /**
@@ -55,13 +98,13 @@ public class ControladorFormaBuscaEstudiantes
      * @return el campo seleccionado.
      */
     public CampoEstudiante getCampo() {
-        // Aquí va su código.
+        return opcionesCampo.getValue(); 
     }
 
     /**
      * Define el foco incial del diálogo.
      */
     @Override public void defineFoco() {
-        // Aquí va su código.
+        entradaValor.requestFocus(); 
     }
 }
